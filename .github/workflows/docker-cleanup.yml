name: Docker Cleanup

on:
  workflow_dispatch:  # מאפשר להריץ את ה-Workflow ידנית

jobs:
  cleanup:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker
      uses: docker/setup-buildx-action@v2

    - name: Install jq (required for JSON parsing)
      run: sudo apt-get update && sudo apt-get install -y jq

    - name: Login to Docker Hub
      run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

    - name: Run Docker Cleanup
      run: |
        # קבלת ה-Token של DockerHub
        TOKEN=$(curl -s -X POST -H "Content-Type: application/json" \
          -d "{\"username\": \"$DOCKER_USERNAME\", \"password\": \"$DOCKER_PASSWORD\"}" \
          https://hub.docker.com/v2/users/login/ | jq -r .token)

        # הגדרת הרפוזיטורי
        REPO="your_username/your_repository"  # שנה את שם הרפוזיטורי שלך

        # קבלת רשימת התגים (tags) מה-DockerHub
        IMAGES=$(curl -s -H "Authorization: Bearer $TOKEN" \
          "https://hub.docker.com/v2/repositories/$REPO/tags/?page_size=100" | jq -r '.results | map(select(.name != "latest")) | .[].name')

        # שמירת 3 הגרסאות האחרונות בלבד
        KEEP_IMAGES=$(echo "$IMAGES" | head -n 3)

        # עבור כל תמונה (tag) ברשימה
        for IMAGE in $IMAGES; do
          if echo "$KEEP_IMAGES" | grep -q "$IMAGE"; then
            echo "Keeping image: $IMAGE"
          else
            # קבלת ה-digest של התמונה
            DIGEST=$(curl -s -H "Authorization: Bearer $TOKEN" \
              "https://hub.docker.com/v2/repositories/$REPO/tags/$IMAGE/" | jq -r '.digest')

            # אם ה-digest קיים, נמחק את התמונה
            if [ "$DIGEST" != "null" ]; then
              echo "Deleting old image: $IMAGE (digest: $DIGEST)"
              curl -X DELETE -H "Authorization: Bearer $TOKEN" \
                "https://hub.docker.com/v2/repositories/$REPO/manifests/$DIGEST/"
            fi
          fi
        done
