name: Deploy Docker Image

on:
  workflow_run:
    workflows: ["Build Docker Image and Push to Docker Hub"]
    types:
      - completed

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # 1️⃣ Checkout הקוד מהמאגר
    - name: Checkout code
      uses: actions/checkout@v3

    # 2️⃣ התחברות ל-Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # 3️⃣ משיכת התמונה מ-Docker Hub
    - name: Pull Docker image
      run: docker pull romliani/devops-project-flask:latest

    # 4️⃣ הפעלת קונטיינר Flask לבדיקה
    - name: Run Docker container for testing
      run: |
        docker run -d -p 5000:5000 --name flask_test romliani/devops-project-flask:latest
        sleep 10  # מחכים שהאפליקציה תעלה

    # 5️⃣ בדיקה אם ה-Flask רץ
    - name: Test if Flask app is running
      run: |
        for i in {1..10}; do
          HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:5000)
          if [ "$HTTP_CODE" -eq 200 ]; then
            echo "Flask app is up and running!"
            break
          else
            echo "Waiting for Flask app to start... (Attempt $i)"
            sleep 5
          fi
        done

    # 6️⃣ הרצת בדיקות אוטומטיות ב-Flask
    - name: Run unit tests on Flask app
      run: |
        docker exec flask_test python -m unittest discover -s .github/workflows/test_flask_app.py

    # 7️⃣ צפייה בלוגים של ה-Flask
    - name: View Docker container logs
      run: docker logs flask_test

    # 8️⃣ התקנת Google Cloud SDK
    - name: Set up Cloud SDK
      run: |
        sudo apt-get update
        sudo apt-get install -y curl apt-transport-https ca-certificates gnupg
        curl -fsSL https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo gpg --dearmor -o /usr/share/keyrings/cloud.google.gpg
        echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee /etc/apt/sources.list.d/google-cloud-sdk.list
        sudo apt-get update
        sudo apt-get install -y google-cloud-cli

    # 9️⃣ אימות מול Google Cloud
    - name: Authenticate to Google Cloud
      run: |
        echo "${{ secrets.GCP_CREDENTIALS_BASE64 }}" | base64 --decode > /tmp/gcp_credentials.json
        gcloud auth activate-service-account --key-file=/tmp/gcp_credentials.json
        gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
        gcloud auth list  # בדיקה שהאימות הצליח

    # 1️⃣0️⃣ התקנת GKE Auth Plugin (מתוקן)
    - name: Install GKE Auth Plugin
      run: |
        sudo apt-get update
        sudo apt-get install -y google-cloud-sdk-gke-gcloud-auth-plugin

    # 1️⃣1️⃣ קביעת משתנה סביבה ל-GKE
    - name: Export GKE Auth Plugin Variable
      run: echo 'export USE_GKE_GCLOUD_AUTH_PLUGIN=True' >> $GITHUB_ENV

    # 1️⃣2️⃣ התחברות ל-GKE עם kubectl
    - name: Set up GKE kubectl
      run: |
        gcloud container clusters get-credentials devops-cluster --zone us-east1 --project ${{ secrets.GCP_PROJECT_ID }}

    # 1️⃣3️⃣ עדכון התמונה של ה-Deployment ב-Kubernetes
    - name: Deploy to GKE
      run: |
        kubectl set image deployment/flask-app-app flask=romliani/devops-project-flask:latest --record

    # 1️⃣4️⃣ המתנה לסיום הפריסה
    - name: Wait for deployment to complete
      run: |
        kubectl rollout status deployment/flask-app-app -n default
