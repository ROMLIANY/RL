name: Deploy Docker Image

on:
  workflow_run:
    workflows: ["Build Docker Image and Push to Docker Hub"]
    types:
      - completed

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout הקוד
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. התחברות ל-Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 3. משיכת התמונה מ-Docker Hub
      - name: Pull Docker image
        run: |
          docker pull romliani/devops-project-flask:latest

      # 4. הרצת קונטיינר Docker לצורך בדיקות
      - name: Run Docker container for testing
        run: |
          docker run -d -p 5000:5000 --name flask_test romliani/devops-project-flask:latest
          sleep 20 # המתנה להעלאת הקונטיינר

      # 5. בדיקה אם האפליקציה Flask רצה
      - name: Test if Flask app is running
        run: |
          for i in {1..10}; do
            HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:5000)
            if [ "$HTTP_CODE" -eq 200 ]; then
              echo "Flask app is up and running!"
              break
            else
              echo "Waiting for Flask app to start... (Attempt $i)"
              sleep 5
            fi
          done

      # 6. צפייה בלוגים של קונטיינר Docker לצורך ניפוי באגים
      - name: View Docker container logs
        run: docker logs flask_test

      # 7. הגדרת הזדהות ל-GKE
      - name: Set up GKE Authentication
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      # 8. התקנת SDK של Google Cloud ותוסף ה-GKE
      - name: Set up Cloud SDK
        run: |
          # הוספת מאגר Google Cloud SDK
          echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
          # התקנת תלויות נדרשות
          sudo apt-get install -y apt-transport-https ca-certificates gnupg
          # הוספת מפתח ציבורי של Google Cloud
          curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -
          # עדכון רשימת החבילות והתקנת SDK של Google Cloud
          sudo apt-get update && sudo apt-get install -y google-cloud-sdk
          # התקנת תוסף GKE gcloud auth
          gcloud components install gke-gcloud-auth-plugin

      # 9. הזדהות עם Google Cloud
      - name: Authenticate to Google Cloud
        run: |
          gcloud auth activate-service-account --key-file=$GOOGLE_APPLICATION_CREDENTIALS
          gcloud config set project $GOOGLE_CLOUD_PROJECT

      # 10. הגדרת kubectl עבור GKE
      - name: Set up GKE kubectl
        run: |
          gcloud container clusters get-credentials devops-cluster --zone us-east1-b --project ${{ secrets.GCP_PROJECT_ID }}

      # 11. פריסת האפליקציה ל-GKE
      - name: Deploy to GKE
        run: |
          kubectl set image deployment/flask-app flask-app=romliani/devops-project-flask:latest --record

      # 12. המתנה להשלמת הפריסה
      - name: Wait for deployment to complete
        run: |
          kubectl rollout status deployment/flask-app